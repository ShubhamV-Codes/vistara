<nav class="navbar sticky-top px-3 py-3">
  <div class="navbar-content">
    <!-- Brand -->
    <a class="navbar-brand" href="/">
      <i class="fa-regular fa-compass"></i>
      <span>Vistara</span>
    </a>

    <!-- Nav Links (Desktop) -->
    <div class="nav-links">
      <a href="/">Home</a>
      <a href="/listings">Explore</a>
      <a href="/listings/new">List Your House</a>
    </div>

    <!-- Auth Links (Desktop) -->
    <div class="d-flex align-items-center gap-3">
      <!-- Search Icon Button -->
      <button class="search-icon-btn" id="searchBtn" title="Search by location">
        <i class="fa-solid fa-magnifying-glass"></i>
      </button>

      <div class="auth-links">
        <% if(currUser){ %>
          <div class="user-avatar" onclick="window.location.href='/profile'" style="cursor: pointer;" title="<%= currUser.username %>">
            <%= currUser.username ? currUser.username.charAt(0).toUpperCase() : 'U' %>
          </div>
          <a href="/logout"
            style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: #fff; border: 2px solid #667eea;">
            <i class="fa-solid fa-sign-out-alt"></i> Logout
          </a>
          <% } else { %>
            <a href="/login">
              <i class="fa-solid fa-sign-in-alt"></i> Login
            </a>
            <a href="/signup">
              <i class="fa-solid fa-user-plus"></i> Sign Up
            </a>
            <% } %>
      </div>

      <!-- Hamburger (Mobile) -->
      <button class="navbar-toggler" type="button" id="hamburgerBtn">
        <span class="navbar-toggler-icon"></span>
      </button>
    </div>
  </div>
</nav>

<!-- Search Modal -->
<div id="searchModal" class="search-modal">
  <div class="search-modal-content">
    <span class="search-close">&times;</span>
    <h2><i class="fa-solid fa-magnifying-glass"></i> Search Listings</h2>
    <p class="search-subtitle">Find properties by location, city, or country</p>
    <form action="/listings/search" method="GET">
      <input 
        type="text" 
        name="location" 
        placeholder="Enter location (e.g., Mumbai, India, Paris...)" 
        required
        class="modal-search-input"
        autocomplete="off"
      >
      <button type="submit" class="modal-search-btn">
        <i class="fa-solid fa-magnifying-glass"></i> Search Properties
      </button>
    </form>
  </div>
</div>

<!-- Sidebar Overlay -->
<div class="sidebar-overlay" id="sidebarOverlay"></div>

<!-- Sidebar -->
<div id="sidebar">
    
  <span class="close-btn" id="closeSidebar"></span>

  <div class="sidebar-content">
    <a href="/">
      <i class="fa-solid fa-house"></i>
      <span>Home</span>
    </a>
    <a href="/listings">
      <i class="fa-solid fa-compass"></i>
      <span>Explore</span>
    </a>
    <a href="/listings/new">
      <i class="fa-solid fa-plus-circle"></i>
      <span>List Your House</span>
    </a>
    <a href="#" id="sidebarSearchBtn">
      <i class="fa-solid fa-magnifying-glass"></i>
      <span>Search by Place</span>
    </a>
    <hr style="margin: 1rem 0; border-color: #ddd;">

    <% if(currUser){ %>
      <a href="/profile">
        <i class="fa-solid fa-user"></i>
        <span>Profile</span>
      </a>

      <a href="/logout">
        <i class="fa-solid fa-sign-out-alt"></i>
        <span>Logout</span>
      </a>
      <% } else { %>
        <a href="/login">
          <i class="fa-solid fa-sign-in-alt"></i>
          <span>Login</span>
        </a>
        <a href="/signup">
          <i class="fa-solid fa-user-plus"></i>
          <span>Sign Up</span>
        </a>
        <% } %>
  </div>
</div>

<script>
  const sidebar = document.getElementById("sidebar");
  const hamburgerBtn = document.getElementById("hamburgerBtn");
  const closeBtn = document.getElementById("closeSidebar");
  const overlay = document.getElementById("sidebarOverlay");

  function openSidebar() {
    sidebar.style.width = "300px";
    overlay.classList.add("active");
    document.body.style.overflow = "hidden";
  }

  function closeSidebar() {
    sidebar.style.width = "0";
    overlay.classList.remove("active");
    document.body.style.overflow = "auto";
  }

  hamburgerBtn.addEventListener("click", e => {
    e.stopPropagation();
    openSidebar();
  });

  closeBtn.addEventListener("click", closeSidebar);
  overlay.addEventListener("click", closeSidebar);

  window.addEventListener("click", e => {
    if (!sidebar.contains(e.target) && e.target !== hamburgerBtn && sidebar.style.width === "300px") {
      closeSidebar();
    }
  });

  document.addEventListener("keydown", e => {
    if (e.key === "Escape" && sidebar.style.width === "300px") {
      closeSidebar();
    }
  });

  // Search Modal Functionality
  const searchBtn = document.getElementById('searchBtn');
  const sidebarSearchBtn = document.getElementById('sidebarSearchBtn');
  const searchModal = document.getElementById('searchModal');
  const searchClose = document.querySelector('.search-close');

  function openSearchModal() {
    searchModal.style.display = 'block';
    document.body.style.overflow = 'hidden';
    // Focus on input after modal opens
    setTimeout(() => {
      document.querySelector('.modal-search-input').focus();
    }, 100);
  }

  function closeSearchModal() {
    searchModal.style.display = 'none';
    document.body.style.overflow = 'auto';
  }

  if (searchBtn) {
    searchBtn.addEventListener('click', openSearchModal);
  }

  if (sidebarSearchBtn) {
    sidebarSearchBtn.addEventListener('click', (e) => {
      e.preventDefault();
      closeSidebar();
      setTimeout(openSearchModal, 300);
    });
  }

  if (searchClose) {
    searchClose.addEventListener('click', closeSearchModal);
  }

  window.addEventListener('click', (e) => {
    if (e.target === searchModal) {
      closeSearchModal();
    }
  });

  // Close search modal on Escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && searchModal.style.display === 'block') {
      closeSearchModal();
    }
  });

  // Load User Listings Function
  async function loadUserListings() {
    const listingsSection = document.getElementById("myListingsSection");
    const listingsCount = document.getElementById("listingsCount");
    if (!listingsSection) return;

    listingsSection.innerHTML = `
      <div class="loading-listings">
        <i class="fa-solid fa-spinner"></i>
        <p>Loading your listings...</p>
      </div>
    `;

    try {
      const response = await fetch('/api/user/listings');

      if (!response.ok) {
        throw new Error('Failed to fetch listings');
      }

      const listings = await response.json();

      // Update count badge
      if (listingsCount) {
        listingsCount.textContent = listings.length;
      }

      if (listings && listings.length > 0) {
        listingsSection.innerHTML = listings.map(listing => `
          <div class="listing-item">
            <div class="listing-info">
              <img src="${listing.image?.url || 'https://images.unsplash.com/photo-1756916474898-a5bee9427163?q=80&w=1170&auto=format&fit=crop'}" 
                   alt="${listing.title}" 
                   class="listing-image"
                   onerror="this.src='https://images.unsplash.com/photo-1756916474898-a5bee9427163?q=80&w=1170&auto=format&fit=crop'">
              <div class="listing-details">
                <div class="listing-title">${listing.title}</div>
                <div class="listing-location">
                  <i class="fa-solid fa-location-dot"></i> 
                  ${listing.location || 'Location not specified'}
                </div>
                <div class="listing-price">â‚¹${listing.price?.toLocaleString() || '0'}/night</div>
              </div>
            </div>
            <div class="listing-actions">
              <button class="btn-edit" onclick="editListing('${listing._id}')">
                <i class="fa-solid fa-edit"></i> Edit
              </button>
              <button class="btn-delete" onclick="deleteListing('${listing._id}', '${listing.title.replace(/'/g, "\\'")}')">
                <i class="fa-solid fa-trash"></i> Delete
              </button>
            </div>
          </div>
        `).join('');
      } else {
        listingsSection.innerHTML = `
          <div class="no-listings">
            <i class="fa-solid fa-house-circle-xmark"></i>
            <h4>No listings yet</h4>
            <p>Start by creating your first property listing</p>
          </div>
        `;
      }
    } catch (error) {
      console.error('Error loading listings:', error);
      listingsSection.innerHTML = `
        <div class="no-listings">
          <i class="fa-solid fa-exclamation-triangle"></i>
          <h4>Error loading listings</h4>
          <p>Please try again later</p>
        </div>
      `;
      if (listingsCount) {
        listingsCount.textContent = '0';
      }
    }
  }

  // Edit Listing Function
  function editListing(listingId) {
    window.location.href = `/listings/${listingId}/edit`;
  }

  // Delete Listing Function
  async function deleteListing(listingId, listingTitle) {
    if (!confirm(`Are you sure you want to delete "${listingTitle}"?\n\nThis action cannot be undone.`)) {
      return;
    }

    try {
      const response = await fetch(`/listings/${listingId}?_method=DELETE`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      });

      if (response.ok) {
        loadUserListings();

        const notification = document.createElement('div');
        notification.style.cssText = `
          position: fixed;
          top: 80px;
          right: 20px;
          background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
          color: #155724;
          padding: 1rem 1.5rem;
          border-radius: 10px;
          box-shadow: 0 4px 15px rgba(0,0,0,0.2);
          z-index: 9999;
          font-weight: 500;
          display: flex;
          align-items: center;
          gap: 0.5rem;
        `;
        notification.innerHTML = '<i class="fa-solid fa-check-circle"></i> Listing deleted successfully!';
        document.body.appendChild(notification);

        setTimeout(() => {
          notification.style.opacity = '0';
          notification.style.transition = 'opacity 0.3s ease';
          setTimeout(() => notification.remove(), 300);
        }, 3000);
      } else {
        alert('Failed to delete listing. Please try again.');
      }
    } catch (error) {
      console.error('Error deleting listing:', error);
      alert('Error deleting listing. Please check your connection and try again.');
    }
  }

  // Animate brand icon on scroll
  window.addEventListener('scroll', () => {
    const navbar = document.querySelector('.navbar');
    if (window.scrollY > 50) {
      navbar.style.boxShadow = '0 4px 12px rgba(0,0,0,0.1)';
    } else {
      navbar.style.boxShadow = '0 2px 8px rgba(0,0,0,0.08)';
    }
  });
</script>